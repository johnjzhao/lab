q_SELECT_MEM_ENROLL_CVRG_WITH_MEDICARE=select \
										DISTINCT \
											mem_enroll_cvg.SRC_MBR_KEY, \
											mem_enroll_cvg.MBR_ID as MBR_ID, \
											mem_enroll_cvg.ENRLMT_START_DT, \
											mem_enroll_cvg.ENRLMT_END_DT, \
											mem_enroll_cvg.CVRG_START_DT, \
											mem_enroll_cvg.CVRG_END_DT , \
											mem_enroll_cvg.SRC_DATA_KEY, \
											AGT.SRC_EFF_DT,
											AGT.SRC_TERM_DT,
											CASE WHEN cdo_mbr_demg.MEDCR_ID IS NOT NULL THEN cdo_mbr_demg.MEDCR_ID  \
												 ELSE mbr_medcr_dim.MEDCR_ID END AS MEDCR_ID
										from \
											vw_member_enrollments_coverage mem_enroll_cvg \
										left join \
											vw_cdo_mbr_demg cdo_mbr_demg \
										ON  \
											(	 \
												mem_enroll_cvg.MBR_ID = cdo_mbr_demg.MBR_ID  \
											AND \
												mem_enroll_cvg.SRC_DATA_KEY = '59'  \
											AND  \
												cdo_mbr_demg.SRC_DATA_KEY = '59'  \
											AND \
												MEDCR_ID_TY = 'MBI' \
											) \
										left join \
											vw_member_medicare_dim mbr_medcr_dim \
										ON \
											( \
												mem_enroll_cvg.SRC_MBR_KEY = mbr_medcr_dim.SRC_MBR_KEY  \
											AND  \
												mem_enroll_cvg.SRC_DATA_KEY = '59'  \
											AND  \
												mbr_medcr_dim.SRC_DATA_KEY = '59'  \
											AND  \
												mbr_medcr_dim.IS_CURR_IND= 'Y'  \
											AND  \
												mbr_medcr_dim.ID_TY='MBI' \
											) \
										left join \
											vw_member_dim member_dim \
										ON \
											mem_enroll_cvg.MBR_ID = member_dim.MBR_ID  \
										WHERE  \
											mem_enroll_cvg.SRC_DATA_KEY = '59' \
										;

q_SELECT_MEM_SALES_AGENT_DISENROLL_REINSTATE=select \
												DISTINCT \
													mem_enroll_cvg_medicare.*, \
													TRR.DisenrollmentReasonCode , \
													TRR.ElectionType, \
													CASE WHEN TRRTRCSHORTNAME='ENROLL REINSTAT' THEN 'Y'   END AS REINSTATE_FLAG
												from \
													vw_mem_enroll_cvrg_with_medicare mem_enroll_cvg_medicare \
												left join \
													vw_cms_trans_reply_dim TRR \
												ON \
														mem_enroll_cvg_medicare.MEDCR_ID = TRR.MEDICAREID \
													AND \
														to_date(mem_enroll_cvg_medicare.ENRLMT_END_DT, "YYYYMMDD") = date_format(CAST(TRR.effectivedatekey AS DATE), 'YYYYMMDD') \
												WHERE  \
													mem_enroll_cvg_medicare.SRC_DATA_KEY = '59' \
												and 
													TRR.effectivedatekey <> -1  \
												AND ( \
														(TRR.transactiontypecode IN ( '51' , '54' ) AND TRR.transactionreplycode NOT IN ('008','037','050','051','052','104','107','205','292')) OR  \
														(TRR.transactionreplycode IN ('703','708','711')) \
													) \
												AND \
													( \
														TRR.transactiontypecode IN ('80','81','82','01') \
													AND \
														TRR.transactionreplycode IN ('287’,’291’) \
													) \
												;

q_SELECT_AGT_TY_CD=SELECT  \
						DISTINCT  \
						TRIM(AGT_ID) AS AGT_ID, \
						AGT_TY_CD, \
						AGT_HIER_EFF_DT, \
						AGT_HIER_TERM_DT, \
						GA_EFF_DT, \
						GA_TERM_DT, \
						MGA_EFF_DT, \
						MGA_TERM_DT, \
						SGA_EFF_DT, \
						SGA_TERM_DT,  \
						FMO_EFF_DT, \
						FMO_TERM_DT \
					FROM \
						vw_broker_comm_sircon;


q_SELECT_MBR_ENRLMT_CVRG_AGT=SELECT  \
								DISTINCT \
								CVRG.SRC_MBR_KEY, \
								CVRG.MBR_ID, \
								AGT.SRC_EFF_DT, \
								AGT.SRC_TERM_DT, \
								CVRG.SRC_PLAN_ID, \
								CVRG.ENRLMT_START_DT, \
								CVRG.ENRLMT_END_DT, \
								CVRG.CVRG_START_DT, \
								CVRG.CVRG_END_DT , \
								CVRG.PLAN_TY, \
								CVRG.CNTRCT_NUM, \
								CVRG.PBP_NUM, \
								CVRG.SEG_NUM, \
								CVRG.SRC_DATA_KEY, \
								CVRG.CVRG_TY_CD, \
								CVRG.ENRLMT_SIG_DT, \
								CVRG.VOL_IND, \
								CVRG.PRODT_TY_CD, \
								CVRG.SPECL_NEED_PLAN_TY,   \
								PLAN, \
								SALES_AGT_ID,  \
								MEDCR_ID, \
								COALESCE(AGTY.AGT_TY_CD,'DUMMY') AS AGT_TY_CD, \
								date_add(CAST(CVRG.ENRLMT_END_DT AS DATE), 1) AS NXT_ENRLMT_START_DT, \
								DENSE_RANK() OVER (PARTITION BY CVRG.SRC_MBR_KEY ORDER BY CVRG.ENRLMT_START_DT,CVRG.CVRG_START_DT) AS SEQ_NO \
							FROM  \
								vw_member_enrollments_coverage CVRG   \
							LEFT JOIN  \
								vw_member_sales_agent AGT  \
							ON  \
								CVRG.SRC_MBR_KEY = AGT.SRC_MBR_KEY  \
							AND  \
								CVRG.ENRLMT_END_DT BETWEEN SRC_EFF_DT AND SRC_TERM_DT    \
							LEFT JOIN  \
								vw_agt_ty_cd AGTY  \
							ON  \
								AGTY.AGT_ID = AGT.SALES_AGT_ID  \
							AND  \
								CVRG.ENRLMT_START_DT BETWEEN AGT_HIER_EFF_DT AND AGT_HIER_TERM_DT   \
							LEFT JOIN  \
								vw_mem_enroll_cvrg_with_medicare MED \
							ON  \
								CVRG.SRC_MBR_KEY = MED.SRC_MBR_KEY \
							;
							
q_SELECT_BROKER_AGT_ID=SELECT  \
							DISTINCT \
							AGT_ID \
						FROM vw_agt_ty_cd \
						LEFT JOIN vw_member_sales_agent \
						ON AGT_ID=SALES_AGT_ID \
						;

q_SELECT_MBR_ENRLMT_CVRG_AGT_BRK=SELECT  \
									DISTINCT \
									CVRG.SRC_MBR_KEY, \
									CVRG.MBR_ID, \
									CVRG.SRC_EFF_DT, \
									CVRG.SRC_TERM_DT, \
									CVRG.SRC_PLAN_ID, \
									CVRG.ENRLMT_START_DT, \
									CVRG.ENRLMT_END_DT, \
									CVRG.CVRG_START_DT, \
									CVRG.CVRG_END_DT , \
									CVRG.PLAN_TY, \
									CVRG.CNTRCT_NUM, \
									CVRG.PBP_NUM, \
									CVRG.SEG_NUM, \
									CVRG.SRC_DATA_KEY, \
									CVRG.CVRG_TY_CD, \
									CVRG.ENRLMT_SIG_DT, \
									CVRG.SPECL_NEED_PLAN_TY,   \
									CVRG.VOL_IND, \
									CVRG.PRODT_TY_CD, \
									CVRG.PLAN, \
									COALESCE(CVRG.SALES_AGT_ID,'Unknown') AS SALES_AGT_ID,  \
									CVRG.MEDCR_ID, \
									COALESCE(AGT_ID,'Unknown') AS BROKER_AGT_ID,  \
									 CVRG.AGT_TY_CD, \
									CVRG.NXT_ENRLMT_START_DT, \
									CVRG.SEQ_NO \
								FROM vw_mbr_enrlmt_cvrg_agt CVRG \
								LEFT JOIN  vw_broker_agt_id BRK \
								ON CVRG.SALES_AGT_ID = BRK.AGT_ID \
								;
								
q_SELECT_MBR_ENRLMT_CVRG_AGT_BRK_COMM_AND_NONCOMM=SELECT  \
													DISTINCT \
													CVG1.SRC_MBR_KEY \
													,CVG1.MBR_ID \
													,CVG1.SRC_EFF_DT \
													,CVG1.SRC_TERM_DT \
													,CVG1.SRC_PLAN_ID \
													,CVG1.ENRLMT_START_DT \
													,CVG1.ENRLMT_END_DT \
													,CVG1.CVRG_START_DT \
													,CVG1.CVRG_END_DT \
													,CVG1.PLAN_TY \
													,CVG1.CNTRCT_NUM \
													,CVG1.PBP_NUM \
													,CVG1.SEG_NUM \
													,CVG1.SRC_DATA_KEY \
													,CVG1.CVRG_TY_CD \
													,CVG1.PLAN \
													,CVG1.SALES_AGT_ID \
													,CVG1.BROKER_AGT_ID   \
													,CVG1.AGT_TY_CD \
													,CVG1.NXT_ENRLMT_START_DT \
													,CVG1.SEQ_NO \
													,CVG1.VOL_IND \
													,CVG1.MEDCR_ID \
													,CVG1.PRODT_TY_CD \
													,CVG1.SPECL_NEED_PLAN_TY \
													,TRR.DISENROLLMENTREASONCODE \
													,RINS.REINSTATE_FLAG \
													,TRR.ElectionType \
													,COALESCE(CVG2.SEQ_NO,'99999999') AS NXT_SEQ \
													,CASE WHEN (CVG1.NXT_ENRLMT_START_DT <> CVG2.ENRLMT_START_DT AND CVG1.ENRLMT_START_DT <> CVG2.ENRLMT_START_DT) THEN 'Term'  \
															WHEN (CVG1.NXT_ENRLMT_START_DT = CVG2.ENRLMT_START_DT AND TRR.DISENROLLMENTREASONCODE is NOT NULL \
															AND TRR.DISENROLLMENTREASONCODE <> '18' AND REINSTATE_FLAG IS NULL ) THEN 'Term'   \
															WHEN (CVG1.ENRLMT_END_DT > CURRENT_DATE) THEN 'No Term'  \
															WHEN NXT_SEQ = '99999999' and (CVG1.ENRLMT_END_DT < CURRENT_DATE) THEN 'Term' \
															WHEN NXT_SEQ = '99999999' THEN 'LR' ELSE 'No Term' END AS TERM_ENRL_DTS		 \
													,CASE WHEN (CVG1.PRODT_TY_CD = 'MEDICARE') AND (CVG2.PRODT_TY_CD = 'CARE-CAID') THEN 'No Term'    \
													  WHEN (CVG1.PRODT_TY_CD = 'CARE-CAID') AND (CVG2.PRODT_TY_CD = 'MEDICARE') THEN 'Term'    \
													 WHEN (CVG1.PLAN <> CVG2.PLAN AND CVG2.SALES_AGT_ID <> HIST.SALES_AGT_ID) THEN 'Term' -- 11/20/2021 \
													  WHEN (CVG1.PLAN <> CVG2.PLAN) AND (EXTRACT (YEAR FROM CVG2.ENRLMT_END_DT) < 2017) THEN 'No Term'  \
													  WHEN (CVG1.PLAN <> CVG2.PLAN) AND (CVG2.VOL_IND = 'VOLUNTARY') AND(EXTRACT (YEAR FROM CVG2.ENRLMT_END_DT) BETWEEN 2017 AND 2019) THEN \
														CASE WHEN \
															(((UPPER(CVG1.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG1.AGT_TY_CD) = 'SEASONAL')  \
															 AND (UPPER(CVG2.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG2.AGT_TY_CD) = 'SEASONAL') AND \
															(CVG1.SALES_AGT_ID = CVG2.SALES_AGT_ID)) OR \
															((UPPER(CVG1.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG1.AGT_TY_CD) = 'SEASONAL')  \
															AND (UPPER(CVG2.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG2.AGT_TY_CD) = 'SEASONAL') AND \
															(CVG1.SALES_AGT_ID <>CVG2.SALES_AGT_ID)) OR \
															(UPPER(CVG1.AGT_TY_CD) = 'EXTERNAL' AND (UPPER(CVG2.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG2.AGT_TY_CD) = 'SEASONAL') AND \
															(CVG1.SALES_AGT_ID <> CVG2.SALES_AGT_ID)) OR \
															(UPPER(CVG1.AGT_TY_CD) = 'EXTERNAL' AND (UPPER(CVG2.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG2.AGT_TY_CD) = 'SEASONAL') AND \
															(CVG1.SALES_AGT_ID = CVG2.SALES_AGT_ID)) OR \
															(UPPER(CVG1.AGT_TY_CD) = 'EXTERNAL' AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
															(CVG1.SALES_AGT_ID = CVG2.SALES_AGT_ID)) OR \
															((UPPER(CVG1.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG1.AGT_TY_CD) = 'SEASONAL') AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
															(CVG1.SALES_AGT_ID = CVG2.SALES_AGT_ID))) \
															 THEN 'No Term'  \
														 WHEN (CVG1.PLAN <> CVG2.PLAN) AND (CVG2.VOL_IND = 'VOLUNTARY') AND (EXTRACT (YEAR FROM CVG2.ENRLMT_END_DT) BETWEEN 2017 AND 2019) AND \
															((UPPER(CVG1.AGT_TY_CD) = 'EXTERNAL' AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
															(CVG1.SALES_AGT_ID <> CVG2.SALES_AGT_ID)) OR     \
															(UPPER(CVG1.AGT_TY_CD) = 'DUMMY' AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
														   (CVG1.SALES_AGT_ID <>  CVG2.SALES_AGT_ID))OR  \
															((UPPER(CVG1.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG1.AGT_TY_CD) = 'SEASONAL') AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
															(CVG1.SALES_AGT_ID <> CVG2.SALES_AGT_ID)))  \
															THEN 'Term'  \
															END \
													WHEN (CVG1.PLAN <> CVG2.PLAN) AND (CVG2.VOL_IND = 'VOLUNTARY') AND (EXTRACT (YEAR FROM CVG2.ENRLMT_END_DT)  > 2019)  THEN \
														 CASE WHEN  \
															((UPPER(CVG1.AGT_TY_CD) = 'EXTERNAL' AND (UPPER(CVG2.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG2.AGT_TY_CD) = 'SEASONAL') AND \
															(CVG1.SALES_AGT_ID <> CVG2.SALES_AGT_ID)) OR \
															(UPPER(CVG1.AGT_TY_CD) = 'EXTERNAL' AND (UPPER(CVG2.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG2.AGT_TY_CD) = 'SEASONAL') AND \
															(CVG1.SALES_AGT_ID = CVG2.SALES_AGT_ID)) OR \
															((UPPER(CVG1.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG1.AGT_TY_CD) = 'SEASONAL') AND (UPPER(CVG2.AGT_TY_CD) = 'INTERNAL' OR \
															 UPPER(CVG2.AGT_TY_CD) = 'SEASONAL') AND \
															(CVG1.SALES_AGT_ID = CVG2.SALES_AGT_ID)) OR \
															(UPPER(CVG1.AGT_TY_CD) = 'DUMMY' AND (UPPER(CVG2.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG2.AGT_TY_CD) = 'SEASONAL') AND \
															(CVG1.SALES_AGT_ID = CVG2.SALES_AGT_ID))OR    \
															(UPPER(CVG1.AGT_TY_CD) = 'DUMMY' AND (UPPER(CVG2.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG2.AGT_TY_CD) = 'SEASONAL') AND \
															(CVG1.SALES_AGT_ID <> CVG2.SALES_AGT_ID))OR  \
															((UPPER(CVG1.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG1.AGT_TY_CD) = 'SEASONAL') AND (UPPER(CVG2.AGT_TY_CD) = 'INTERNAL'  \
															OR UPPER(CVG2.AGT_TY_CD) = 'SEASONAL') AND \
															(CVG1.SALES_AGT_ID <> CVG2.SALES_AGT_ID))) 			 \
															THEN 'No Term'   \
													WHEN (CVG1.PLAN <> CVG2.PLAN) AND (CVG2.VOL_IND = 'VOLUNTARY') AND (EXTRACT (YEAR FROM CVG2.ENRLMT_END_DT) > 2019) AND   \
														   ((UPPER(CVG1.AGT_TY_CD) = 'EXTERNAL' AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND   \
														   (CVG1.SALES_AGT_ID =  CVG2.SALES_AGT_ID) AND  \
														   (CVG2.SPECL_NEED_PLAN_TY = 'D-SNP' OR CVG2.SPECL_NEED_PLAN_TY='I-SNP' OR CVG2.SPECL_NEED_PLAN_TY='C-SNP')) OR \
														   (UPPER(CVG1.AGT_TY_CD) = 'EXTERNAL' AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
														   (CVG1.SALES_AGT_ID =  CVG2.SALES_AGT_ID)) OR \
														   (UPPER(CVG1.AGT_TY_CD) = 'EXTERNAL' AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND    \
														   (CVG1.SALES_AGT_ID <>  CVG2.SALES_AGT_ID) AND  \
														   (CVG2.SPECL_NEED_PLAN_TY = 'D-SNP' OR CVG2.SPECL_NEED_PLAN_TY='I-SNP' OR CVG2.SPECL_NEED_PLAN_TY='C-SNP')) OR \
														   (UPPER(CVG1.AGT_TY_CD) = 'EXTERNAL' AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
														   (CVG1.SALES_AGT_ID <>  CVG2.SALES_AGT_ID)) OR \
														   (UPPER(CVG1.AGT_TY_CD) = 'DUMMY' AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
														   (CVG1.SALES_AGT_ID =  CVG2.SALES_AGT_ID))OR   \
														   (UPPER(CVG1.AGT_TY_CD) = 'DUMMY' AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
														   (CVG1.SALES_AGT_ID <>  CVG2.SALES_AGT_ID))OR	  \
														   ((UPPER(CVG1.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG1.AGT_TY_CD) = 'SEASONAL') AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
														   (CVG1.SALES_AGT_ID <> CVG2.SALES_AGT_ID)) OR \
														   ((UPPER(CVG1.AGT_TY_CD) = 'INTERNAL' OR UPPER(CVG1.AGT_TY_CD) = 'SEASONAL') AND UPPER(CVG2.AGT_TY_CD) = 'EXTERNAL' AND \
															(CVG1.SALES_AGT_ID = CVG2.SALES_AGT_ID))) \
														   THEN 'Term'  \
														  END  \
													  WHEN (CVG1.PLAN = CVG2.PLAN OR CVG2.VOL_IND = 'INVOLUNTARY')  THEN 'No Term' \
													  WHEN NXT_SEQ = '99999999' THEN 'LR' ELSE 'No Term' END AS TERM_PLANS		    \
													,CASE WHEN CVG1.SEQ_NO = 1 THEN 'NEW' ELSE 'NA' END AS F_REC \
													,CASE WHEN NXT_SEQ = '99999999' AND (CVG1.ENRLMT_END_DT > CURRENT_DATE) THEN 'NEW' ELSE 'TERM' END AS L_REC \
													,CASE WHEN CVG1.SEQ_NO = 1 THEN CAST('2099-12-31' AS DATE) ELSE CVG1.ENRLMT_END_DT END AS NEW_ENRLMT_END_DT \
												FROM  \
													vw_mbr_enrlmt_cvrg_agt_brk CVG1 \
												LEFT JOIN  \
													vw_mbr_enrlmt_cvrg_agt_brk CVG2 \
												ON CVG1.SRC_MBR_KEY = CVG2.SRC_MBR_KEY AND CVG1.SEQ_NO + 1 = CVG2.SEQ_NO  \
												LEFT JOIN  \
													vw_mem_sales_agent_disenroll_reinstate TRR \
												ON CVG1.SRC_MBR_KEY = TRR.SRC_MBR_KEY AND  \
												  CVG1.CVRG_END_DT = TRR.ENRLMT_END_DT      \
												LEFT JOIN  \
													VT_W_SDO_MBR_ENRLMT_CVRG_TRR_RI TRR   \
												ON CVG1.SRC_MBR_KEY = RINS.SRC_MBR_KEY AND  \
												  CVG1.NXT_ENRLMT_START_DT= RINS.ENRLMT_START_DT \
												;

q_SELECT_PCS_WEEKLY_ENROLL_TRANSACTIONS=SELECT * FROM vw_pcs_weekly_enroll_transactions;

s3_read_member_sales_agent=s3://gov-solutions-commissions-artifacts-dev/artifactory/glue/extracts/member_sales_agent/member_sales_agent_06122022 225129.parquet

s3_weekly_file_write_path=s3://gov-solutions-commissions-artifacts-dev/artifactory/glue/transform/pcs/pcs_weekly_agent_enrollment_transactions_report/