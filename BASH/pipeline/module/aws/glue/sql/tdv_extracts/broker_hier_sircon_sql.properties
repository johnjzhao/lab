q_CREATE_VT_BROKER_HIER=CREATE MULTISET VOLATILE TABLE VT_BROKER_HIER AS \
						( \
						SELECT * FROM {TRXHUB_CORE}.BROKER_SIRCON_PRODUCER_HIERARCHY WHERE  \
						ACTV_IND = '1'  \
						) WITH DATA \
						PRIMARY INDEX(PDCR_CD) \
						ON COMMIT PRESERVE ROWS;

q_COLLECT_STATS_VT_BROKER_HIER=COLLECT STATS ON VT_BROKER_HIER COLUMN(PDCR_CD); 

q_CREATE_VT_BROKER_DEMG=CREATE MULTISET VOLATILE TABLE VT_BROKER_DEMG AS \
						( \
						SELECT * FROM {TRXHUB_CORE}.BROKER_SIRCON_PRODUCER_DEMOGRAPHIC WHERE  \
						ACTV_IND = '1'  \
						) WITH DATA \
						PRIMARY INDEX(PDCR_CD, AGENT_ID) \
						ON COMMIT PRESERVE ROWS;

q_COLLECT_STATS_VT_BROKER_DEMG=COLLECT STATS ON VT_BROKER_DEMG COLUMN (PDCR_CD, AGENT_ID);

q_CREATE_VT_BROKER_FULL_HD=CREATE MULTISET VOLATILE TABLE VT_BROKER_FULL_HD AS \
							( \
							SELECT  \
								AGENT_ID,H.*,PDCR_LNAME,PDCR_FNAME,NATL_PDCR_NUM,FIRM_IND,D.PDCR_EFF_DT,D.PDCR_TERM_DT,D.CORP_NAME ,D.PDCR_SSN_TIN,D.LOAD_DTTS AS ETL_LOAD_DT_TM_DEM,D.LASTUPDT_DTTS AS ETL_LAST_UPDT_DT_TM_DEM \
							FROM  \
								VT_BROKER_HIER H \
							INNER JOIN  \
								VT_BROKER_DEMG D \
							ON  \
								H.PDCR_CD = D.PDCR_CD \
							) WITH DATA \
							PRIMARY INDEX(PDCR_CD, AGENT_ID) \
							ON COMMIT PRESERVE ROWS;

q_COLLECT_STATS_VT_BROKER_FULL_HD=COLLECT STATS ON  VT_BROKER_FULL_HD COLUMN (PDCR_CD, AGENT_ID);

q_CREATE_VT_BROKER_NEW_CDO=CREATE MULTISET VOLATILE TABLE VT_BROKER_NEW_CDO AS \
						( \
						SELECT  \
							AGT_PDCR_CD, \
							AGT_ID, \
							AGT_FUL_NM, \
							AGT_FRST_NM, \
							AGT_LAST_NM, \
							AGT_TY_CD, \
							AGT_SUB_TY_CD, \
							AGT_NATL_PDCR_NUM, \
							AGCY_ENTTY_CD, \
							AGT_PDCR_LVL_NUM,  \
							AGT_HIER_EFF_DT, \
							AGT_HIER_TERM_DT, \
							AGT_DIR_PAY_IND, \
							 DIR_PAY_AGCY_ID, \
							DIR_PAY_AGCY_NM, \
							DIR_PAY_AGCY_TAX_ID, \
							DIR_PAY_AGCY_PDCR_CD, \
							DIR_PAY_AGCY_EFF_DT, \
							DIR_PAY_AGCY_TERM_DT,  \
							GA_PDCR_CD, \
							GA_ID, \
							GA_NM, \
							GA_EFF_DT,  \
							GA_TERM_DT, \
							MGA_PDCR_CD, \
							MGA_ID, \
							MGA_NM, \
							MGA_EFF_DT, \
							MGA_TERM_DT, \
							SGA_PDCR_CD, \
							SGA_ID, \
							SGA_NM, \
							SGA_EFF_DT, \
							SGA_TERM_DT, \
							FMO_PDCR_CD, \
							FMO_ID, \
							FMO_NM, \
							FMO_EFF_DT, \
							FMO_TERM_DT, \
							ETL_LOAD_DT_TM, \
							ETL_LAST_UPDT_DT_TM, \
							PARENT_PDCR_CD,  \
							PARENT_LVL_NUM,  \
							B_ID,  \
							BEFF, BEND, \
							G_ID,  \
							GEFF, \
							GEND, \
							M_ID,  \
							MEFF,  \
							MEND,  \
							S_ID,  \
							SEFF,  \
							SEND,  \
							F_ID,  \
							FEFF, \
							FEND,  \
							AFMO_PDCR_CD, \
							AFMO_ID, \
							AFMO_NM, \
							AFMO_EFF_DT,  \
							AFMO_TERM_DT, \
							SRC_DATA_KEY, \
							SRC_DATA_DESC, \
							ETL_HASH_VAL, \
							ETL_NK_HASH_VAL \
							FROM  \
							( SELECT  \
								A.PDCR_CD AS AGT_PDCR_CD, \
								A.AGENT_ID AS AGT_ID,  \
								CASE WHEN A.PDCR_LNAME IS NOT NULL AND A.PDCR_FNAME IS NOT NULL AND A.PDCR_LNAME<>'' AND A.PDCR_FNAME<>''  \
								THEN A.PDCR_LNAME||', '||A.PDCR_FNAME ELSE A.CORP_NAME END AS AGT_FUL_NM, \
								CASE WHEN A.PDCR_LNAME IS NOT NULL AND A.PDCR_FNAME IS NOT NULL AND A.PDCR_LNAME<>'' AND A.PDCR_FNAME<>'' THEN A.PDCR_FNAME ELSE '' END AS AGT_FRST_NM, \
								CASE WHEN A.PDCR_LNAME IS NOT NULL AND A.PDCR_FNAME IS NOT NULL AND A.PDCR_LNAME<>'' AND A.PDCR_FNAME<>'' THEN A.PDCR_LNAME ELSE '' END AS AGT_LAST_NM, \
								 CAST (CASE WHEN A.SIRCON_AGENT_ID NOT LIKE '6000%' THEN 'External'   \
									  WHEN A.SIRCON_AGENT_ID LIKE '6000%' AND F.SIRCON_AGENT_ID ='55555555' THEN 'Internal'       \
									  WHEN A.SIRCON_AGENT_ID LIKE '6000%' AND F.SIRCON_AGENT_ID ='44444444' THEN 'Seasonal'    \
								END As VARCHAR(20)) AS AGT_TY_CD,  \
								COALESCE (SFCNT.AGENT_SUB_TYPE__C,'Unknown') AS AGT_SUB_TY_CD, \
								A.NATL_PDCR_NUM AS AGT_NATL_PDCR_NUM, \
								A.FIRM_IND    AS AGCY_ENTTY_CD, \
								A.PDCR_LVL_NUM AS AGT_PDCR_LVL_NUM,  \
								CASE WHEN A.AGRMT_EFF_DT IS NOT NULL AND TRIM(A.AGRMT_EFF_DT)<>'' and AHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(A.AGRMT_EFF_DT as date) \
								ELSE NULL END as AGT_HIER_EFF_DT, \
								CASE WHEN A.AGRMT_END_DT IS NOT NULL AND TRIM(A.AGRMT_END_DT)<>'' and AHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(A.AGRMT_END_DT as date) \
								ELSE NULL END as AGT_HIER_TERM_DT, \
								CASE WHEN A.PDCR_LVL_NUM = 5 THEN 'Y'   ELSE 'N' END as AGT_DIR_PAY_IND, \
								B.AGENT_ID AS DIR_PAY_AGCY_ID, \
								B.CORP_NAME AS DIR_PAY_AGCY_NM, \
								B.PDCR_SSN_TIN AS DIR_PAY_AGCY_TAX_ID, \
								B.PARENT_PDCR_CD AS DIR_PAY_AGCY_PDCR_CD, \
								CASE WHEN B.AGRMT_EFF_DT IS NOT NULL AND TRIM(B.AGRMT_EFF_DT)<>'' and BHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(TRIM(B.AGRMT_EFF_DT) as date) \
								ELSE NULL END as DIR_PAY_AGCY_EFF_DT, \
								CASE WHEN B.AGRMT_END_DT IS NOT NULL AND TRIM(B.AGRMT_END_DT)<>'' and BHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(TRIM(B.AGRMT_END_DT) as date) \
								ELSE NULL END as DIR_PAY_AGCY_TERM_DT, \
								G.PDCR_CD AS GA_PDCR_CD, \
								G.AGENT_ID AS GA_ID, \
								CAST(G.CORP_NAME AS VARCHAR(255)) AS GA_NM, \
								CASE WHEN G.AGRMT_EFF_DT  IS NOT NULL AND TRIM(G.AGRMT_EFF_DT)<>'' and GHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(G.AGRMT_EFF_DT as date) \
								ELSE NULL END as GA_EFF_DT, \
								CASE WHEN G.AGRMT_END_DT  IS NOT NULL AND TRIM(G.AGRMT_END_DT)<>'' and GHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(TRIM(G.AGRMT_END_DT) as date) \
								ELSE NULL END as GA_TERM_DT, \
								M.PDCR_CD AS MGA_PDCR_CD, \
								M.AGENT_ID AS MGA_ID, \
								CAST(M.CORP_NAME AS VARCHAR(255)) AS MGA_NM, \
								CASE WHEN M.AGRMT_EFF_DT  IS NOT NULL AND TRIM(M.AGRMT_EFF_DT)<>'' and MHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(M.AGRMT_EFF_DT as date) \
								ELSE NULL END as MGA_EFF_DT, \
								CASE WHEN M.AGRMT_END_DT  IS NOT NULL AND TRIM(M.AGRMT_END_DT)<>'' and MHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(TRIM(M.AGRMT_END_DT) as date) \
								ELSE NULL END as MGA_TERM_DT, \
								S.PDCR_CD AS SGA_PDCR_CD, \
								S.AGENT_ID AS SGA_ID, \
								CAST(S.CORP_NAME AS VARCHAR(255)) AS SGA_NM, \
								CASE WHEN S.AGRMT_EFF_DT  IS NOT NULL AND TRIM(S.AGRMT_EFF_DT)<>'' and SHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(S.AGRMT_EFF_DT as date) \
								ELSE NULL END as SGA_EFF_DT, \
								CASE WHEN S.AGRMT_END_DT  IS NOT NULL AND TRIM(S.AGRMT_END_DT)<>'' and SHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(S.AGRMT_END_DT as date) \
								ELSE NULL END as SGA_TERM_DT, \
								F.PDCR_CD AS FMO_PDCR_CD, \
								F.AGENT_ID AS  FMO_ID, \
								CAST(F.CORP_NAME AS VARCHAR(255)) AS FMO_NM, \
								CASE WHEN F.AGRMT_EFF_DT  IS NOT NULL AND TRIM(F.AGRMT_EFF_DT)<>'' and FHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(F.AGRMT_EFF_DT as date) \
								ELSE NULL END as FMO_EFF_DT, \
								CASE WHEN F.AGRMT_END_DT  IS NOT NULL AND TRIM(F.AGRMT_END_DT)<>'' and FHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(TRIM(F.AGRMT_END_DT) as date) \
								ELSE NULL END as FMO_TERM_DT, \
								A.ETL_LOAD_DT_TM_DEM AS  ETL_LOAD_DT_TM, \
								A.ETL_LAST_UPDT_DT_TM_DEM AS ETL_LAST_UPDT_DT_TM, \
								A.PARENT_PDCR_CD,  \
								A.PARENT_LVL_NUM,  \
								B.AGENT_ID AS B_ID,  \
								B.AGRMT_EFF_DT AS BEFF, \
								B.AGRMT_END_DT AS BEND, \
								G.AGENT_ID AS G_ID, \
								G.AGRMT_EFF_DT AS GEFF,  \
								G.AGRMT_END_DT AS GEND, \
								M.AGENT_ID AS M_ID,  \
								M.AGRMT_EFF_DT AS MEFF,  \
								M.AGRMT_END_DT AS MEND, \
								S.AGENT_ID AS S_ID,  \
								S.AGRMT_EFF_DT AS SEFF,  \
								S.AGRMT_END_DT AS SEND, \
								F.AGENT_ID AS F_ID,  \
								F.AGRMT_EFF_DT AS FEFF,  \
								F.AGRMT_END_DT AS FEND, \
								AF.PDCR_CD AS AFMO_PDCR_CD, \
								AF.AGENT_ID AS AFMO_ID, \
								CAST(AF.CORP_NAME AS VARCHAR(255)) AS AFMO_NM, \
								CASE WHEN AF.AGRMT_EFF_DT  IS NOT NULL AND TRIM(AF.AGRMT_EFF_DT)<>'' and AFHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(AF.AGRMT_EFF_DT as date) \
								ELSE NULL END as AFMO_EFF_DT, \
								CASE WHEN AF.AGRMT_END_DT  IS NOT NULL AND TRIM(AF.AGRMT_END_DT)<>'' and AFHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(TRIM(AF.AGRMT_END_DT) as date) \
								ELSE NULL END as AFMO_TERM_DT, \
								A.SRC_DATA_KEY, \
								SDD.SRC_DATA_DESC, \
								NULL AS ETL_HASH_VAL, \
								NULL AS ETL_NK_HASH_VAL \
							FROM \
								(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('8')) A \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('5')) B \
							ON A.PARENT_PDCR_CD = B.PDCR_CD \
								AND A.PARENT_LVL_NUM = B.PDCR_LVL_NUM \
								AND B.AGRMT_EFF_DT <= A.AGRMT_END_DT \
								AND B.AGRMT_END_DT >= A.AGRMT_EFF_DT \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('4')) G \
							ON COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD) = G.PDCR_CD \
								AND COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM) = G.PDCR_LVL_NUM \
								AND G.AGRMT_EFF_DT <= COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT) \
								AND G.AGRMT_END_DT >= COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT) \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('3')) M \
							ON COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD)) = M.PDCR_CD \
								AND COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM)) = M.PDCR_LVL_NUM \
								AND M.AGRMT_EFF_DT <= COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT)) \
								AND M.AGRMT_END_DT >= COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT)) \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('2')) S \
							ON COALESCE(M.PARENT_PDCR_CD,COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD))) = S.PDCR_CD \
							AND COALESCE(M.PARENT_LVL_NUM,COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM))) = S.PDCR_LVL_NUM \
							AND S.AGRMT_EFF_DT <= COALESCE(M.AGRMT_END_DT,COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT))) \
							AND S.AGRMT_END_DT >= COALESCE(M.AGRMT_EFF_DT,COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT))) \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('0')) F \
							ON COALESCE(S.PARENT_PDCR_CD,COALESCE(M.PARENT_PDCR_CD,COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD)))) = F.PDCR_CD \
							AND COALESCE(S.PARENT_LVL_NUM,COALESCE(M.PARENT_LVL_NUM,COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM)))) = F.PDCR_LVL_NUM \
							AND F.AGRMT_EFF_DT <= COALESCE(S.AGRMT_END_DT,COALESCE(M.AGRMT_END_DT,COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT)))) \
							AND F.AGRMT_END_DT >= COALESCE(S.AGRMT_EFF_DT,COALESCE(M.AGRMT_EFF_DT,COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT)))) \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('10')) AF \
							ON COALESCE(F.PARENT_PDCR_CD,COALESCE(S.PARENT_PDCR_CD,COALESCE(M.PARENT_PDCR_CD,COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD))))) = AF.PDCR_CD \
							AND COALESCE(F.PARENT_LVL_NUM,COALESCE(S.PARENT_LVL_NUM,COALESCE(M.PARENT_LVL_NUM,COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM))))) = AF.PDCR_LVL_NUM \
							AND AF.AGRMT_EFF_DT <= COALESCE(F.AGRMT_END_DT,COALESCE(S.AGRMT_END_DT,COALESCE(M.AGRMT_END_DT,COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT))))) \
							AND AF.AGRMT_END_DT >= COALESCE(F.AGRMT_EFF_DT,COALESCE(S.AGRMT_EFF_DT,COALESCE(M.AGRMT_EFF_DT,COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT))))) \
							LEFT JOIN {SALES_COMMISSION_CORE}.SFDC_CONTACT SFCNT \
							ON A.AGENT_ID = SFCNT.AGENT_WRITING_ID__C \
							AND cast (case when trim(A.PDCR_EFF_DT) ='0001-01-01' Then '1900-01-01' else trim(A.PDCR_EFF_DT) end as date)  = SFCNT.AGREEMENT_EFFECTIVE_DATE__C ( DATE) \
							AND cast (case when trim(A.PDCR_TERM_DT) ='0001-01-01' Then '1900-01-01' else trim(A.PDCR_TERM_DT) end as date)  = SFCNT.AGREEMENT_END_DATE__C (DATE) \
							LEFT JOIN  \
							(SELECT DISTINCT SRC_DATA_KEY,SRC_DATA_DESC FROM {DATAMART_REFTABLE}.SRC_DATA_DIM) SDD  \
							ON  \
							A.SRC_DATA_KEY=SDD.SRC_DATA_KEY \
							LEFT JOIN SYS_CALENDAR.CALENDAR AHED \
							ON  (AHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(A.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR AHTD \
							ON  (AHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(A.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR BHED \
							ON  (BHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(B.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR BHTD \
							ON  (BHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(B.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR GHED \
							ON  (GHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(G.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR GHTD \
							ON  (GHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(G.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR MHED \
							ON  (MHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(M.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR MHTD \
							ON  (MHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(M.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR SHED \
							ON  (SHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(S.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR SHTD \
							ON  (SHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(S.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR FHED \
							ON  (FHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(F.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR FHTD \
							ON  (FHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(F.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR AFHED \
							ON  (AFHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(AF.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR AFHTD \
							ON  (AFHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(AF.AGRMT_END_DT)  \
						UNION \
							SELECT  \
								A.PDCR_CD AS AGT_PDCR_CD, \
								A.AGENT_ID AS AGT_ID,  \
								CASE WHEN A.PDCR_LNAME IS NOT NULL AND A.PDCR_FNAME IS NOT NULL AND A.PDCR_LNAME<>'' AND A.PDCR_FNAME<>''  \
								THEN A.PDCR_LNAME||', '||A.PDCR_FNAME ELSE A.CORP_NAME END AS AGT_FUL_NM, \
								CASE WHEN A.PDCR_LNAME IS NOT NULL AND A.PDCR_FNAME IS NOT NULL AND A.PDCR_LNAME<>'' AND A.PDCR_FNAME<>'' THEN A.PDCR_FNAME ELSE '' END AS AGT_FRST_NM, \
								CASE WHEN A.PDCR_LNAME IS NOT NULL AND A.PDCR_FNAME IS NOT NULL AND A.PDCR_LNAME<>'' AND A.PDCR_FNAME<>'' THEN A.PDCR_LNAME ELSE '' END AS AGT_LAST_NM, \
								 CAST (CASE WHEN A.SIRCON_AGENT_ID NOT LIKE '6000%' THEN 'External'   \
									  WHEN A.SIRCON_AGENT_ID LIKE '6000%' AND F.SIRCON_AGENT_ID ='55555555' THEN 'Internal'       \
									  WHEN A.SIRCON_AGENT_ID LIKE '6000%' AND F.SIRCON_AGENT_ID ='44444444' THEN 'Seasonal'    \
								END As VARCHAR(20)) AS AGT_TY_CD,  \
								COALESCE (SFCNT.AGENT_SUB_TYPE__C,'Unknown') AS AGT_SUB_TY_CD, \
								A.NATL_PDCR_NUM AS AGT_NATL_PDCR_NUM, \
								A.FIRM_IND    AS AGCY_ENTTY_CD, \
								A.PDCR_LVL_NUM AS AGT_PDCR_LVL_NUM,  \
								CASE WHEN A.AGRMT_EFF_DT IS NOT NULL AND TRIM(A.AGRMT_EFF_DT)<>'' and AHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(A.AGRMT_EFF_DT as date) \
								ELSE NULL END as AGT_HIER_EFF_DT, \
								CASE WHEN A.AGRMT_END_DT IS NOT NULL AND TRIM(A.AGRMT_END_DT)<>'' and AHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(A.AGRMT_END_DT) as date) \
								ELSE NULL END as AGT_HIER_TERM_DT, \
								CASE WHEN A.PDCR_LVL_NUM = 5 THEN 'Y'   ELSE 'N' END as AGT_DIR_PAY_IND, \
								B.AGENT_ID AS DIR_PAY_AGCY_ID, \
								B.CORP_NAME AS DIR_PAY_AGCY_NM, \
								B.PDCR_SSN_TIN AS DIR_PAY_AGCY_TAX_ID, \
								B.PARENT_PDCR_CD AS DIR_PAY_AGCY_PDCR_CD, \
								CASE WHEN B.AGRMT_EFF_DT IS NOT NULL AND TRIM(B.AGRMT_EFF_DT)<>'' and BHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(B.AGRMT_EFF_DT) as date) \
								ELSE NULL END as DIR_PAY_AGCY_EFF_DT, \
								CASE WHEN B.AGRMT_END_DT IS NOT NULL AND TRIM(B.AGRMT_EFF_DT)<>'' and BHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(B.AGRMT_END_DT) as date) \
								ELSE NULL END as DIR_PAY_AGCY_TERM_DT, \
								G.PDCR_CD AS GA_PDCR_CD, \
								G.AGENT_ID AS GA_ID, \
								CAST(G.CORP_NAME AS VARCHAR(255)) AS GA_NM, \
								CASE WHEN G.AGRMT_EFF_DT  IS NOT NULL AND TRIM(G.AGRMT_EFF_DT)<>'' and GHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(G.AGRMT_EFF_DT) as date) \
								ELSE NULL END as GA_EFF_DT, \
								CASE WHEN G.AGRMT_END_DT  IS NOT NULL AND TRIM(G.AGRMT_END_DT)<>'' and GHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(TRIM(G.AGRMT_END_DT) as date) \
								ELSE NULL END as GA_TERM_DT, \
								M.PDCR_CD AS MGA_PDCR_CD, \
								M.AGENT_ID AS MGA_ID, \
								CAST(M.CORP_NAME AS VARCHAR(255)) AS MGA_NM, \
								CASE WHEN M.AGRMT_EFF_DT  IS NOT NULL AND TRIM(M.AGRMT_EFF_DT)<>'' and MHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(M.AGRMT_EFF_DT) as date) \
								ELSE NULL END as MGA_EFF_DT, \
								CASE WHEN M.AGRMT_END_DT  IS NOT NULL AND TRIM(M.AGRMT_END_DT)<>'' and MHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(M.AGRMT_END_DT) as date) \
								ELSE NULL END as MGA_TERM_DT, \
								S.PDCR_CD AS SGA_PDCR_CD, \
								S.AGENT_ID AS SGA_ID, \
								CAST(S.CORP_NAME AS VARCHAR(255)) AS SGA_NM, \
								CASE WHEN S.AGRMT_EFF_DT  IS NOT NULL AND TRIM(S.AGRMT_EFF_DT)<>'' and SHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(S.AGRMT_EFF_DT) as date) \
								ELSE NULL END as SGA_EFF_DT, \
								CASE WHEN S.AGRMT_END_DT  IS NOT NULL AND TRIM(S.AGRMT_END_DT)<>'' and SHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(S.AGRMT_END_DT) as date) \
								ELSE NULL END as SGA_TERM_DT, \
								F.PDCR_CD AS FMO_PDCR_CD, \
								F.AGENT_ID AS  FMO_ID, \
								CAST(F.CORP_NAME AS VARCHAR(255)) AS FMO_NM, \
								CASE WHEN F.AGRMT_EFF_DT  IS NOT NULL AND TRIM(F.AGRMT_EFF_DT)<>'' and FHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(F.AGRMT_EFF_DT) as date) \
								ELSE NULL END as FMO_EFF_DT, \
								CASE WHEN F.AGRMT_END_DT  IS NOT NULL AND TRIM(F.AGRMT_END_DT)<>'' and FHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(F.AGRMT_END_DT) as date) \
								ELSE NULL END as FMO_TERM_DT, \
								A.ETL_LOAD_DT_TM_DEM AS  ETL_LOAD_DT_TM, \
								A.ETL_LAST_UPDT_DT_TM_DEM AS ETL_LAST_UPDT_DT_TM, \
								A.PARENT_PDCR_CD,  \
								A.PARENT_LVL_NUM,  \
								B.AGENT_ID AS B_ID,  \
								B.AGRMT_EFF_DT AS BEFF, \
								B.AGRMT_END_DT AS BEND, \
								G.AGENT_ID AS G_ID, \
								G.AGRMT_EFF_DT AS GEFF,  \
								G.AGRMT_END_DT AS GEND, \
								M.AGENT_ID AS M_ID,  \
								M.AGRMT_EFF_DT AS MEFF,  \
								M.AGRMT_END_DT AS MEND, \
								S.AGENT_ID AS S_ID,  \
								S.AGRMT_EFF_DT AS SEFF,  \
								S.AGRMT_END_DT AS SEND, \
								F.AGENT_ID AS F_ID,  \
								F.AGRMT_EFF_DT AS FEFF,  \
								F.AGRMT_END_DT AS FEND, \
								AF.PDCR_CD AS AFMO_PDCR_CD, \
								AF.AGENT_ID AS AFMO_ID, \
								CAST(AF.CORP_NAME AS VARCHAR(255)) AS AFMO_NM, \
								CASE WHEN AF.AGRMT_EFF_DT  IS NOT NULL AND TRIM(AF.AGRMT_EFF_DT)<>'' and AFHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(AF.AGRMT_EFF_DT) as date) \
								ELSE NULL END as AFMO_EFF_DT, \
								CASE WHEN AF.AGRMT_END_DT  IS NOT NULL AND TRIM(AF.AGRMT_END_DT)<>'' and AFHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(AF.AGRMT_END_DT) as date) \
								ELSE NULL END as AFMO_TERM_DT, \
								A.SRC_DATA_KEY, \
								SDD.SRC_DATA_DESC, \
								NULL AS ETL_HASH_VAL, \
								NULL AS ETL_NK_HASH_VAL \
							FROM \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('5')) A \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('5')) B \
							ON A.PARENT_PDCR_CD = B.PDCR_CD \
							AND A.PARENT_LVL_NUM = B.PDCR_LVL_NUM \
							AND B.AGRMT_EFF_DT <= A.AGRMT_END_DT \
							AND B.AGRMT_END_DT >= A.AGRMT_EFF_DT \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('4')) G \
							ON COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD) = G.PDCR_CD \
							AND COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM) = G.PDCR_LVL_NUM \
							AND G.AGRMT_EFF_DT <= COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT) \
							AND G.AGRMT_END_DT >= COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT) \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('3')) M \
							ON COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD)) = M.PDCR_CD \
							AND COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM)) = M.PDCR_LVL_NUM \
							AND M.AGRMT_EFF_DT <= COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT)) \
							AND M.AGRMT_END_DT >= COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT)) \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('2')) S \
							ON COALESCE(M.PARENT_PDCR_CD,COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD))) = S.PDCR_CD \
							AND COALESCE(M.PARENT_LVL_NUM,COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM))) = S.PDCR_LVL_NUM \
							AND S.AGRMT_EFF_DT <= COALESCE(M.AGRMT_END_DT,COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT))) \
							AND S.AGRMT_END_DT >= COALESCE(M.AGRMT_EFF_DT,COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT))) \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('0')) F \
							ON COALESCE(S.PARENT_PDCR_CD,COALESCE(M.PARENT_PDCR_CD,COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD)))) = F.PDCR_CD \
							AND COALESCE(S.PARENT_LVL_NUM,COALESCE(M.PARENT_LVL_NUM,COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM)))) = F.PDCR_LVL_NUM \
							AND F.AGRMT_EFF_DT <= COALESCE(S.AGRMT_END_DT,COALESCE(M.AGRMT_END_DT,COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT)))) \
							AND F.AGRMT_END_DT >= COALESCE(S.AGRMT_EFF_DT,COALESCE( \
							M.AGRMT_EFF_DT,COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT)))) \
							LEFT JOIN \
							(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('10')) AF \
							ON COALESCE(F.PARENT_PDCR_CD,COALESCE(S.PARENT_PDCR_CD,COALESCE(M.PARENT_PDCR_CD,COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD))))) = AF.PDCR_CD \
							AND COALESCE(F.PARENT_LVL_NUM,COALESCE(S.PARENT_LVL_NUM,COALESCE(M.PARENT_LVL_NUM,COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM))))) = AF.PDCR_LVL_NUM \
							AND AF.AGRMT_EFF_DT <= COALESCE(F.AGRMT_END_DT,COALESCE(S.AGRMT_END_DT,COALESCE(M.AGRMT_END_DT,COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT))))) \
							AND AF.AGRMT_END_DT >= COALESCE(F.AGRMT_EFF_DT,COALESCE(S.AGRMT_EFF_DT,COALESCE(M.AGRMT_EFF_DT,COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT))))) \
							LEFT JOIN {SALES_COMMISSION_CORE}.SFDC_CONTACT SFCNT \
							ON A.AGENT_ID = SFCNT.AGENT_WRITING_ID__C \
							AND cast (case when trim(A.PDCR_EFF_DT) ='0001-01-01' Then '1900-01-01' else trim(A.PDCR_EFF_DT) end as date)  = SFCNT.AGREEMENT_EFFECTIVE_DATE__C ( DATE) \
							AND cast (case when trim(A.PDCR_TERM_DT) ='0001-01-01' Then '1900-01-01' else trim(A.PDCR_TERM_DT) end as date)  = SFCNT.AGREEMENT_END_DATE__C (DATE) \
							LEFT JOIN  \
							(SELECT DISTINCT SRC_DATA_KEY,SRC_DATA_DESC FROM {DATAMART_REFTABLE}.SRC_DATA_DIM) SDD  \
							ON  \
							A.SRC_DATA_KEY=SDD.SRC_DATA_KEY \
							LEFT JOIN SYS_CALENDAR.CALENDAR AHED \
							ON  (AHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(A.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR AHTD \
							ON  (AHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(A.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR BHED \
							ON  (BHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(B.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR BHTD \
							ON  (BHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(B.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR GHED \
							ON  (GHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(G.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR GHTD \
							ON  (GHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(G.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR MHED \
							ON  (MHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(M.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR MHTD \
							ON  (MHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(M.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR SHED \
							ON  (SHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(S.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR SHTD \
							ON  (SHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(S.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR FHED \
							ON  (FHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(F.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR FHTD \
							ON  (FHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(F.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR AFHED \
							ON  (AFHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(AF.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR AFHTD \
							ON  (AFHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(AF.AGRMT_END_DT)  \
						UNION \
							SELECT  \
								A.PDCR_CD AS AGT_PDCR_CD, \
								A.AGENT_ID AS AGT_ID,  \
								CASE WHEN A.PDCR_LNAME IS NOT NULL AND A.PDCR_FNAME IS NOT NULL AND A.PDCR_LNAME<>'' AND A.PDCR_FNAME<>''  \
								THEN A.PDCR_LNAME||', '||A.PDCR_FNAME ELSE A.CORP_NAME END AS AGT_FUL_NM, \
								CASE WHEN A.PDCR_LNAME IS NOT NULL AND A.PDCR_FNAME IS NOT NULL AND A.PDCR_LNAME<>'' AND A.PDCR_FNAME<>'' THEN A.PDCR_FNAME ELSE '' END AS AGT_FRST_NM, \
								CASE WHEN A.PDCR_LNAME IS NOT NULL AND A.PDCR_FNAME IS NOT NULL AND A.PDCR_LNAME<>'' AND A.PDCR_FNAME<>'' THEN A.PDCR_LNAME ELSE '' END AS AGT_LAST_NM, \
								 CAST (CASE WHEN A.SIRCON_AGENT_ID NOT LIKE '6000%' THEN 'External'   \
									  WHEN A.SIRCON_AGENT_ID LIKE '6000%' AND F.SIRCON_AGENT_ID ='55555555' THEN 'Internal'       \
									  WHEN A.SIRCON_AGENT_ID LIKE '6000%' AND F.SIRCON_AGENT_ID ='44444444' THEN 'Seasonal'    \
								END As VARCHAR(20)) AS AGT_TY_CD,  \
								COALESCE (SFCNT.AGENT_SUB_TYPE__C,'Unknown') AS AGT_SUB_TY_CD, \
								A.NATL_PDCR_NUM AS AGT_NATL_PDCR_NUM, \
								A.FIRM_IND    AS AGCY_ENTTY_CD, \
								A.PDCR_LVL_NUM AS AGT_PDCR_LVL_NUM,  \
								CASE WHEN A.AGRMT_EFF_DT IS NOT NULL AND TRIM(A.AGRMT_EFF_DT)<>'' and AHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(A.AGRMT_EFF_DT) as date) \
								ELSE NULL END as AGT_HIER_EFF_DT, \
								CASE WHEN A.AGRMT_END_DT IS NOT NULL AND TRIM(A.AGRMT_END_DT)<>'' and AHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(A.AGRMT_END_DT) as date) \
								ELSE NULL END as AGT_HIER_TERM_DT, \
								CASE WHEN A.PDCR_LVL_NUM = 5 THEN 'Y'   ELSE 'N' END as AGT_DIR_PAY_IND, \
								B.AGENT_ID AS DIR_PAY_AGCY_ID, \
								B.CORP_NAME AS DIR_PAY_AGCY_NM, \
								B.PDCR_SSN_TIN AS DIR_PAY_AGCY_TAX_ID, \
								B.PARENT_PDCR_CD AS DIR_PAY_AGCY_PDCR_CD, \
								CASE WHEN B.AGRMT_EFF_DT IS NOT NULL AND TRIM(B.AGRMT_EFF_DT)<>'' and BHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(B.AGRMT_EFF_DT) as date) \
								ELSE NULL END as DIR_PAY_AGCY_EFF_DT, \
								CASE WHEN B.AGRMT_END_DT IS NOT NULL AND TRIM(B.AGRMT_EFF_DT)<>'' and BHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(B.AGRMT_END_DT) as date) \
								ELSE NULL END as DIR_PAY_AGCY_TERM_DT, \
								G.PDCR_CD AS GA_PDCR_CD, \
								G.AGENT_ID AS GA_ID, \
								CAST(G.CORP_NAME AS VARCHAR(255)) AS GA_NM, \
								CASE WHEN G.AGRMT_EFF_DT  IS NOT NULL AND TRIM(G.AGRMT_EFF_DT)<>'' and GHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(G.AGRMT_EFF_DT) as date) \
								ELSE NULL END as GA_EFF_DT, \
								CASE WHEN G.AGRMT_END_DT  IS NOT NULL AND TRIM(G.AGRMT_END_DT)<>'' and GHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(G.AGRMT_END_DT) as date) \
								ELSE NULL END as GA_TERM_DT, \
								M.PDCR_CD AS MGA_PDCR_CD, \
								M.AGENT_ID AS MGA_ID, \
								CAST(M.CORP_NAME AS VARCHAR(255)) AS MGA_NM, \
								CASE WHEN M.AGRMT_EFF_DT  IS NOT NULL AND TRIM(M.AGRMT_EFF_DT)<>'' and MHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(M.AGRMT_EFF_DT) as date) \
								ELSE NULL END as MGA_EFF_DT, \
								CASE WHEN M.AGRMT_END_DT  IS NOT NULL AND TRIM(M.AGRMT_END_DT)<>'' and MHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(M.AGRMT_END_DT) as date) \
								ELSE NULL END as MGA_TERM_DT, \
								S.PDCR_CD AS SGA_PDCR_CD, \
								S.AGENT_ID AS SGA_ID, \
								CAST(S.CORP_NAME AS VARCHAR(255)) AS SGA_NM, \
								CASE WHEN S.AGRMT_EFF_DT  IS NOT NULL AND TRIM(S.AGRMT_EFF_DT)<>'' and SHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(S.AGRMT_EFF_DT) as date) \
								ELSE NULL END as SGA_EFF_DT, \
								CASE WHEN S.AGRMT_END_DT  IS NOT NULL AND TRIM(S.AGRMT_END_DT)<>'' and SHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(S.AGRMT_END_DT) as date) \
								ELSE NULL END as SGA_TERM_DT, \
								F.PDCR_CD AS FMO_PDCR_CD, \
								F.AGENT_ID AS  FMO_ID, \
								CAST(F.CORP_NAME AS VARCHAR(255)) AS FMO_NM, \
								CASE WHEN F.AGRMT_EFF_DT  IS NOT NULL AND TRIM(F.AGRMT_EFF_DT)<>'' and FHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(F.AGRMT_EFF_DT) as date) \
								ELSE NULL END as FMO_EFF_DT, \
								CASE WHEN F.AGRMT_END_DT  IS NOT NULL AND TRIM(F.AGRMT_END_DT)<>'' and FHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(F.AGRMT_END_DT) as date) \
								ELSE NULL END as FMO_TERM_DT, \
								A.ETL_LOAD_DT_TM_DEM AS  ETL_LOAD_DT_TM, \
								A.ETL_LAST_UPDT_DT_TM_DEM AS ETL_LAST_UPDT_DT_TM, \
								A.PARENT_PDCR_CD,  \
								A.PARENT_LVL_NUM,  \
								B.AGENT_ID AS B_ID,  \
								B.AGRMT_EFF_DT AS BEFF, \
								B.AGRMT_END_DT AS BEND, \
								G.AGENT_ID AS G_ID, \
								G.AGRMT_EFF_DT AS GEFF,  \
								G.AGRMT_END_DT AS GEND, \
								M.AGENT_ID AS M_ID,  \
								M.AGRMT_EFF_DT AS MEFF,  \
								M.AGRMT_END_DT AS MEND, \
								S.AGENT_ID AS S_ID,  \
								S.AGRMT_EFF_DT AS SEFF,  \
								S.AGRMT_END_DT AS SEND, \
								F.AGENT_ID AS F_ID,  \
								F.AGRMT_EFF_DT AS FEFF,  \
								F.AGRMT_END_DT AS FEND, \
								AF.PDCR_CD AS AFMO_PDCR_CD, \
								AF.AGENT_ID AS AFMO_ID, \
								CAST(AF.CORP_NAME AS VARCHAR(255)) AS AFMO_NM, \
								CASE WHEN AF.AGRMT_EFF_DT  IS NOT NULL AND TRIM(AF.AGRMT_EFF_DT)<>'' and AFHED.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(AF.AGRMT_EFF_DT) as date) \
								ELSE NULL END as AFMO_EFF_DT, \
								CASE WHEN AF.AGRMT_END_DT  IS NOT NULL AND TRIM(AF.AGRMT_END_DT)<>'' and AFHTD.CALENDAR_DATE IS NOT NULL  \
								THEN  \
								cast(trim(AF.AGRMT_END_DT) as date) \
								ELSE NULL END as AFMO_TERM_DT, \
								A.SRC_DATA_KEY, \
								SDD.SRC_DATA_DESC, \
								NULL AS ETL_HASH_VAL, \
								NULL AS ETL_NK_HASH_VAL \
							FROM \
								(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('11')) A \
							LEFT JOIN \
								(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('5')) B \
							ON A.PARENT_PDCR_CD = B.PDCR_CD \
								AND A.PARENT_LVL_NUM = B.PDCR_LVL_NUM \
								AND B.AGRMT_EFF_DT <= A.AGRMT_END_DT \
								AND B.AGRMT_END_DT >= A.AGRMT_EFF_DT \
							LEFT JOIN \
								(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('4')) G \
							ON COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD) = G.PDCR_CD \
								AND COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM) = G.PDCR_LVL_NUM \
								AND G.AGRMT_EFF_DT <= COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT) \
								AND G.AGRMT_END_DT >= COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT) \
							LEFT JOIN \
								(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('3')) M \
							ON COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD)) = M.PDCR_CD \
								AND COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM)) = M.PDCR_LVL_NUM \
								AND M.AGRMT_EFF_DT <= COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT)) \
								AND M.AGRMT_END_DT >= COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT)) \
							LEFT JOIN \
								(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('2')) S \
							ON COALESCE(M.PARENT_PDCR_CD,COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD))) = S.PDCR_CD \
								AND COALESCE(M.PARENT_LVL_NUM,COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM))) = S.PDCR_LVL_NUM \
								AND S.AGRMT_EFF_DT <= COALESCE(M.AGRMT_END_DT,COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT))) \
								AND S.AGRMT_END_DT >= COALESCE(M.AGRMT_EFF_DT,COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT))) \
							LEFT JOIN \
								(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('0')) F \
							ON COALESCE(S.PARENT_PDCR_CD,COALESCE(M.PARENT_PDCR_CD,COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD)))) = F.PDCR_CD \
								AND COALESCE(S.PARENT_LVL_NUM,COALESCE(M.PARENT_LVL_NUM,COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM)))) = F.PDCR_LVL_NUM \
								AND F.AGRMT_EFF_DT <= COALESCE(S.AGRMT_END_DT,COALESCE(M.AGRMT_END_DT,COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT)))) \
								AND F.AGRMT_END_DT >= COALESCE(S.AGRMT_EFF_DT,COALESCE(M.AGRMT_EFF_DT,COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT)))) \
							LEFT JOIN \
								(SELECT * FROM VT_BROKER_FULL_HD WHERE PDCR_LVL_NUM IN ('10')) AF \
							ON  COALESCE(F.PARENT_PDCR_CD,COALESCE(S.PARENT_PDCR_CD,COALESCE(M.PARENT_PDCR_CD,COALESCE(G.PARENT_PDCR_CD,COALESCE(B.PARENT_PDCR_CD,A.PARENT_PDCR_CD))))) = AF.PDCR_CD \
								AND     COALESCE(F.PARENT_LVL_NUM,COALESCE(S.PARENT_LVL_NUM,COALESCE(M.PARENT_LVL_NUM,COALESCE(G.PARENT_LVL_NUM,COALESCE(B.PARENT_LVL_NUM,A.PARENT_LVL_NUM))))) = AF.PDCR_LVL_NUM \
								AND AF.AGRMT_EFF_DT <= COALESCE(F.AGRMT_END_DT,COALESCE(S.AGRMT_END_DT,COALESCE(M.AGRMT_END_DT,COALESCE(G.AGRMT_END_DT,COALESCE(B.AGRMT_END_DT,A.AGRMT_END_DT))))) \
								AND AF.AGRMT_END_DT >= COALESCE(F.AGRMT_EFF_DT,COALESCE(S.AGRMT_EFF_DT,COALESCE(M.AGRMT_EFF_DT,COALESCE(G.AGRMT_EFF_DT,COALESCE(B.AGRMT_EFF_DT,A.AGRMT_EFF_DT))))) \
							LEFT JOIN  \
								{SALES_COMMISSION_CORE}.SFDC_CONTACT SFCNT \
							ON A.AGENT_ID = SFCNT.AGENT_WRITING_ID__C \
								AND cast (case when trim(A.PDCR_EFF_DT) ='0001-01-01' Then '1900-01-01' else trim(A.PDCR_EFF_DT) end as date)  = SFCNT.AGREEMENT_EFFECTIVE_DATE__C ( DATE) \
								AND cast (case when trim(A.PDCR_TERM_DT) ='0001-01-01' Then '1900-01-01' else trim(A.PDCR_TERM_DT) end as date)  = SFCNT.AGREEMENT_END_DATE__C (DATE) \
							LEFT JOIN  \
								(SELECT DISTINCT SRC_DATA_KEY,SRC_DATA_DESC FROM {DATAMART_REFTABLE}.SRC_DATA_DIM) SDD  \
							ON  \
								A.SRC_DATA_KEY=SDD.SRC_DATA_KEY \
							LEFT JOIN  \
								SYS_CALENDAR.CALENDAR AHED \
							ON  (AHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(A.AGRMT_EFF_DT)  \
							LEFT JOIN  \
								SYS_CALENDAR.CALENDAR AHTD \
							ON  (AHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(A.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR BHED \
							ON  (BHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(B.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR BHTD \
							ON  (BHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(B.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR GHED \
							ON  (GHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(G.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR GHTD \
							ON  (GHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(G.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR MHED \
							ON  (MHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(M.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR MHTD \
							ON  (MHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(M.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR SHED \
							ON  (SHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(S.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR SHTD \
							ON  (SHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(S.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR FHED \
							ON  (FHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(F.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR FHTD \
							ON  (FHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(F.AGRMT_END_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR AFHED \
							ON  (AFHED.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(AF.AGRMT_EFF_DT)  \
							LEFT JOIN SYS_CALENDAR.CALENDAR AFHTD \
							ON  (AFHTD.CALENDAR_DATE (FORMAT 'YYYY-MM-DD') (CHAR(10))) =trim(AF.AGRMT_END_DT) \
							)A \
							)WITH DATA \
							PRIMARY INDEX(AGT_PDCR_CD, AGT_ID) \
							ON COMMIT PRESERVE ROWS;

q_COLLECT_STATS_VT_BROKER_NEW_CDO=COLLECT STATS ON  VT_BROKER_NEW_CDO COLUMN (AGT_PDCR_CD, AGT_ID);

q_CREATE_VT_BROKER_NEW_CDO_FINAL=CREATE MULTISET VOLATILE TABLE VT_BROKER_NEW_CDO_FINAL AS \
								(SELECT  \
									AGT_PDCR_CD, \
									AGT_ID, \
									AGT_FUL_NM, \
									AGT_FRST_NM, \
									AGT_LAST_NM, \
									AGT_TY_CD, \
									AGT_SUB_TY_CD, \
									AGT_NATL_PDCR_NUM, \
									AGCY_ENTTY_CD, \
									AGT_PDCR_LVL_NUM,  \
									AGT_HIER_EFF_DT, \
									AGT_HIER_TERM_DT, \
									AGT_DIR_PAY_IND, \
									DIR_PAY_AGCY_ID, \
									DIR_PAY_AGCY_NM, \
									DIR_PAY_AGCY_TAX_ID, \
									DIR_PAY_AGCY_PDCR_CD, \
									DIR_PAY_AGCY_EFF_DT, \
									DIR_PAY_AGCY_TERM_DT,  \
									GA_PDCR_CD, \
									GA_ID, \
									GA_NM, \
									GA_EFF_DT,  \
									GA_TERM_DT, \
									MGA_PDCR_CD, \
									MGA_ID, \
									MGA_NM, \
									MGA_EFF_DT, \
									MGA_TERM_DT, \
									SGA_PDCR_CD, \
									SGA_ID, \
									SGA_NM, \
									SGA_EFF_DT, \
									SGA_TERM_DT, \
									FMO_PDCR_CD, \
									FMO_ID, \
									FMO_NM, \
									FMO_EFF_DT, \
									FMO_TERM_DT, \
									ETL_LOAD_DT_TM, \
									ETL_LAST_UPDT_DT_TM, \
									PARENT_PDCR_CD,  \
									PARENT_LVL_NUM,  \
									B_ID, \
									BEFF, \
									BEND, \
									G_ID,  \
									GEFF, \
									GEND, \
									M_ID, \
									MEFF, \
									MEND,  \
									S_ID,  \
									SEFF,  \
									SEND, \
									F_ID,  \
									FEFF,  \
									FEND,  \
									AFMO_PDCR_CD, \
									AFMO_ID, \
									AFMO_NM, \
									AFMO_EFF_DT,  \
									AFMO_TERM_DT, \
									SRC_DATA_KEY, \
									SRC_DATA_DESC, \
									ETL_HASH_VAL, \
									ETL_NK_HASH_VAL, \
									CASE WHEN( \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(BEFF,'1900-01-01') AND COALESCE(BEND,'2099-01-01') AND AGT_HIER_TERM_DT BETWEEN COALESCE(BEFF,'1900-01-01') AND COALESCE(BEND,'2099-01-01')) AND \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(GEFF,'1900-01-01') AND COALESCE(GEND,'2099-01-01') AND AGT_HIER_TERM_DT BETWEEN COALESCE(GEFF,'1900-01-01') AND COALESCE(GEND,'2099-01-01')) AND \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(MEFF,'1900-01-01') AND COALESCE(MEND,'2099-01-01') AND AGT_HIER_TERM_DT BETWEEN COALESCE(MEFF,'1900-01-01') AND COALESCE(MEND,'2099-01-01')) AND \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(SEFF,'1900-01-01') AND COALESCE(SEND,'2099-01-01') AND AGT_HIER_TERM_DT BETWEEN COALESCE(SEFF,'1900-01-01') AND COALESCE(SEND,'2099-01-01')) AND \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(FEFF,'1900-01-01') AND COALESCE(FEND,'2099-01-01') AND AGT_HIER_TERM_DT BETWEEN COALESCE(FEFF,'1900-01-01') AND COALESCE(FEND,'2099-01-01')) AND \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(AFMO_EFF_DT,TO_DATE('1900-01-01','YYYY-MM-DD')) AND COALESCE(AFMO_TERM_DT,TO_DATE('2099-01-01','YYYY-MM-DD')) AND AGT_HIER_TERM_DT BETWEEN COALESCE(AFMO_EFF_DT,TO_DATE('1900-01-01','YYYY-MM-DD')) AND COALESCE(AFMO_TERM_DT,TO_DATE('2099-01-01','YYYY-MM-DD')))    \
									)AND \
									( BEFF IS NOT NULL OR BEND IS NOT NULL OR  \
									GEFF IS NOT NULL OR GEND IS NOT NULL OR  \
									MEFF IS NOT NULL OR MEND IS NOT NULL OR  \
									SEFF IS NOT NULL OR SEND IS NOT NULL OR  \
									FEFF IS NOT NULL OR FEND IS NOT NULL OR \
									AFMO_EFF_DT IS NOT NULL OR AFMO_TERM_DT IS NOT NULL \
									) \
									THEN '1_AGT_HIER_EFF_DT_AGT_HIER_TERM_DT' \
									WHEN \
									( \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(BEFF,'1900-01-01') AND COALESCE(BEND,'2099-01-01')) AND \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(GEFF,'1900-01-01') AND COALESCE(GEND,'2099-01-01')) AND \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(MEFF,'1900-01-01') AND COALESCE(MEND,'2099-01-01')) AND \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(SEFF,'1900-01-01') AND COALESCE(SEND,'2099-01-01')) AND \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(FEFF,'1900-01-01') AND COALESCE(FEND,'2099-01-01')) AND \
									(AGT_HIER_EFF_DT BETWEEN COALESCE(AFMO_EFF_DT,TO_DATE('1900-01-01','YYYY-MM-DD')) AND COALESCE(AFMO_TERM_DT,TO_DATE('2099-01-01','YYYY-MM-DD')))   \
									) \
									AND \
									( \
									BEFF IS NOT NULL OR  \
									GEFF IS NOT NULL OR  \
									MEFF IS NOT NULL OR  \
									SEFF IS NOT NULL OR  \
									FEFF IS NOT NULL OR \
									AFMO_EFF_DT IS NOT NULL \
									)  \
									THEN '2_AGT_HIER_EFF_DT' \
									WHEN \
									( \
									(AGT_HIER_TERM_DT BETWEEN COALESCE(BEFF,'1900-01-01') AND COALESCE(BEND,'2099-01-01')) AND \
									(AGT_HIER_TERM_DT BETWEEN COALESCE(GEFF,'1900-01-01') AND COALESCE(GEND,'2099-01-01')) AND \
									(AGT_HIER_TERM_DT BETWEEN COALESCE(MEFF,'1900-01-01') AND COALESCE(MEND,'2099-01-01')) AND \
									(AGT_HIER_TERM_DT BETWEEN COALESCE(SEFF,'1900-01-01') AND COALESCE(SEND,'2099-01-01')) AND \
									(AGT_HIER_TERM_DT BETWEEN COALESCE(FEFF,'1900-01-01') AND COALESCE(FEND,'2099-01-01')) AND \
									(AGT_HIER_TERM_DT BETWEEN COALESCE(AFMO_EFF_DT,TO_DATE('1900-01-01','YYYY-MM-DD')) AND COALESCE(AFMO_TERM_DT,TO_DATE('2099-01-01','YYYY-MM-DD')))  \
									) \
									AND \
									( \
									BEND IS NOT NULL OR  \
									GEND IS NOT NULL OR  \
									MEND IS NOT NULL OR  \
									SEND IS NOT NULL OR  \
									FEND IS NOT NULL OR \
									AFMO_TERM_DT IS NOT NULL \
									)  \
									THEN '3_AGT_HIER_TERM_DT' \
									ELSE '4_NONE' \
									END DESCP  \
								FROM  \
									VT_BROKER_NEW_CDO) \
								WITH DATA \
								PRIMARY INDEX(AGT_PDCR_CD, AGT_ID) \
								ON COMMIT PRESERVE ROWS;
								
q_COLLECT_STATS_VT_BROKER_NEW_CDO_FINAL=COLLECT STATS ON  VT_BROKER_NEW_CDO_FINAL COLUMN (AGT_PDCR_CD, AGT_ID);

q_SELECT_BROKER_HIER_DEMG=SELECT  \
							(AGT_PDCR_CD) AS AGT_PDCR_CD, \
							AGT_ID, \
							AGT_FUL_NM, \
							AGT_FRST_NM, \
							AGT_LAST_NM, \
							TRIM(AGT_TY_CD) as AGT_TY_CD, \
							TRIM(AGT_SUB_TY_CD) as AGT_SUB_TY_CD, \
							TRIM(AGT_NATL_PDCR_NUM) AS AGT_NATL_PDCR_NUM, \
							TRIM(AGCY_ENTTY_CD) AS AGCY_ENTTY_CD, \
							AGT_PDCR_LVL_NUM,  \
							AGT_HIER_EFF_DT, \
							AGT_HIER_TERM_DT, \
							AGT_DIR_PAY_IND, \
							DIR_PAY_AGCY_ID, \
							DIR_PAY_AGCY_NM, \
							DIR_PAY_AGCY_TAX_ID, \
							(DIR_PAY_AGCY_PDCR_CD) AS DIR_PAY_AGCY_PDCR_CD, \
							DIR_PAY_AGCY_EFF_DT, \
							DIR_PAY_AGCY_TERM_DT,  \
							(GA_PDCR_CD) AS GA_PDCR_CD, \
							GA_ID, \
							GA_NM, \
							GA_EFF_DT,  \
							GA_TERM_DT, \
							(MGA_PDCR_CD) AS MGA_PDCR_CD, \
							TRIM(MGA_ID) AS MGA_ID, \
							MGA_NM, \
							MGA_EFF_DT, \
							MGA_TERM_DT, \
							(SGA_PDCR_CD) AS SGA_PDCR_CD, \
							SGA_ID, \
							SGA_NM, \
							SGA_EFF_DT, \
							SGA_TERM_DT, \
							(FMO_PDCR_CD) AS FMO_PDCR_CD, \
							FMO_ID, \
							FMO_NM, \
							FMO_EFF_DT, \
							FMO_TERM_DT, \
							(AFMO_PDCR_CD) AS AFMO_PDCR_CD, \
							AFMO_ID, \
							AFMO_NM, \
							AFMO_EFF_DT,  \
							AFMO_TERM_DT, \
							TRIM(SRC_DATA_KEY) AS SRC_DATA_KEY, \
							TRIM(SRC_DATA_DESC) AS SRC_DATA_DESC, \
							ETL_HASH_VAL, \
							ETL_NK_HASH_VAL, \
							ETL_LOAD_DT_TM, \
							ETL_LAST_UPDT_DT_TM \
						FROM  \
							VT_BROKER_NEW_CDO_FINAL  \
						QUALIFY ROW_NUMBER () OVER(PARTITION BY  \
							AGT_PDCR_CD ORDER BY AGT_HIER_TERM_DT DESC,AGT_HIER_EFF_DT DESC,AGT_HIER_TERM_DT DESC,AGT_HIER_EFF_DT DESC,DESCP,DIR_PAY_AGCY_TERM_DT DESC,  \
							DIR_PAY_AGCY_EFF_DT DESC, \
							GA_TERM_DT DESC, \
							GA_EFF_DT DESC,  \
							MGA_TERM_DT DESC, \
							MGA_EFF_DT DESC, \
							SGA_TERM_DT DESC, \
							SGA_EFF_DT DESC, \
							FMO_TERM_DT DESC, \
							FMO_EFF_DT DESC, \
							AFMO_TERM_DT DESC, \
							AFMO_EFF_DT DESC,  \
							AGT_ID DESC, \
							DIR_PAY_AGCY_ID DESC, \
							GA_ID DESC, \
							MGA_ID DESC, \
							SGA_ID DESC, \
							FMO_ID DESC, \
							AFMO_ID DESC \
						) = 1;
						
s3_writePath=s3://gov-solutions-commissions-artifacts-dev/artifactory/glue/extracts/broker_comm_sircon/broker_comm_sircon_